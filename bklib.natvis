<?xml version="1.0" encoding="utf-8"?>
<AutoVisualizer xmlns="http://schemas.microsoft.com/vstudio/debugger/natvis/2010">
	<Type Name="bkrl::listbox&lt;*&gt;">
		<DisplayString>[rows: {rows_._Mypair._Myval2._Mylast - rows_._Mypair._Myval2._Myfirst}, cols: {1 + data_.cols._Mypair._Myval2._Mylast - data_.cols._Mypair._Myval2._Myfirst}]</DisplayString>
		<Expand>
			<Synthetic Name="[row data]">
				<DisplayString>{rows_._Mypair._Myval2._Mylast - rows_._Mypair._Myval2._Myfirst}</DisplayString>
				<Expand><ExpandedItem>rows_</ExpandedItem></Expand>
			</Synthetic>
			<Synthetic Name="[col data]">
				<DisplayString>{data_.cols._Mypair._Myval2._Mylast - data_.cols._Mypair._Myval2._Myfirst}</DisplayString>
				<Expand><ExpandedItem>data_.cols</ExpandedItem></Expand>
			</Synthetic>
			<Synthetic Name="[cell data]">
				<DisplayString>{data_.cells._Mypair._Myval2._Mylast - data_.cells._Mypair._Myval2._Myfirst}</DisplayString>
				<Expand>
					<ExpandedItem>data_.cells</ExpandedItem>
				</Expand>
			</Synthetic>
		</Expand>
	</Type>

	<Type Name="boost::basic_string_ref&lt;*,*&gt;">
		<DisplayString Condition="len_ ==   strlen(ptr_)">{ptr_,[len_]s8} [equal]</DisplayString>
		<DisplayString Condition="len_ &gt; strlen(ptr_)">{ptr_,[len_]s8} [more]</DisplayString>
		<DisplayString Condition="len_ &lt; strlen(ptr_)">{ptr_,[len_]s8} [less]</DisplayString>
	</Type>

	<Type Name="bkrl::find_around_result_t&lt;*&gt;">
		<DisplayString Condition="count">[count={count}]</DisplayString>
		<DisplayString Condition="!count">[none]</DisplayString>
		<Expand>
			<Synthetic Name="north west">
				<DisplayString>{values[0]}</DisplayString>
			</Synthetic>
			<Synthetic Name="north">
				<DisplayString>{values[1]}</DisplayString>
			</Synthetic>
			<Synthetic Name="north east">
				<DisplayString>{values[2]}</DisplayString>
			</Synthetic>
			<Synthetic Name="west">
				<DisplayString>{values[3]}</DisplayString>
			</Synthetic>
			<Synthetic Name="east">
				<DisplayString>{values[4]}</DisplayString>
			</Synthetic>
			<Synthetic Name="south west">
				<DisplayString>{values[5]}</DisplayString>
			</Synthetic>
			<Synthetic Name="south">
				<DisplayString>{values[6]}</DisplayString>
			</Synthetic>
			<Synthetic Name="south east">
				<DisplayString>{values[7]}</DisplayString>
			</Synthetic>
			<Synthetic Name="here">
				<DisplayString>{values[8]}</DisplayString>
			</Synthetic>
		</Expand>
	</Type>

	<Type Name="bkrl::text_layout::render_info">
		<DisplayString>{(char)(src_x / 18 + (src_y / 18)*16)} [{dst_x} {dst_y}]</DisplayString>
	</Type>

	<Type Name="bklib::flag_set&lt;*&gt;">
		<DisplayString Condition="value.flags == 0">[none]</DisplayString>
		<DisplayString Condition="value.flags != 0">[{value.flags,b}]</DisplayString>
		<Expand>
			<Synthetic Condition="value.flags &amp; (1 &lt;&lt; 0)" Name="flag">
				<DisplayString>{($T1)(0)}</DisplayString>
			</Synthetic>
			<Synthetic Condition="value.flags &amp; (1 &lt;&lt; 1)" Name="flag">
				<DisplayString>{($T1)(1)}</DisplayString>
			</Synthetic>
			<Synthetic Condition="value.flags &amp; (1 &lt;&lt; 2)" Name="flag">
				<DisplayString>{($T1)(2)}</DisplayString>
			</Synthetic>
			<Synthetic Condition="value.flags &amp; (1 &lt;&lt; 3)" Name="flag">
				<DisplayString>{($T1)(3)}</DisplayString>
			</Synthetic>
			<Synthetic Condition="value.flags &amp; (1 &lt;&lt; 4)" Name="flag">
				<DisplayString>{($T1)(4)}</DisplayString>
			</Synthetic>
			<Synthetic Condition="value.flags &amp; (1 &lt;&lt; 5)" Name="flag">
				<DisplayString>{($T1)(5)}</DisplayString>
			</Synthetic>
		</Expand>
	</Type>

	<Type Name="bklib::hash_id&lt;*,*,*&gt;">
		<DisplayString Condition="$T3 == 0">[{value_, X}]</DisplayString>
		<DisplayString Condition="$T3 != 0">[{value_, X}⇒{string_._Elems,s8b}]</DisplayString>
	</Type>

	<Type Name="bklib::tagged_value&lt;*,*&gt;">
		<DisplayString>{value_}</DisplayString>
	</Type>

	<Type Name="bklib::tuple_base_t&lt;*,*,*&gt;">
		<DisplayString Condition="$T2 == 2">{{x={data._Elems[0]}, y={data._Elems[1]}}}</DisplayString>
		<DisplayString Condition="$T2 == 3">{{x={data._Elems[0]}, y={data._Elems[1]}, z={data._Elems[1]}}}</DisplayString>
	</Type>

	<Type Name="bklib::rect_t&lt;*&gt;">
		<DisplayString>x {{{left}, {right} ⇒ {right - left}}} y {{{top}, {bottom} ⇒ {bottom - top}}}</DisplayString>
	</Type>

	<Type Name="bkrl::creature">
		<DisplayString>{def_}</DisplayString>
	</Type>

	<Type Name="bkrl::item">
		<DisplayString>{def_}</DisplayString>
	</Type>

	<Type Name="bkrl::creature_def">
		<DisplayString>{id_string}</DisplayString>
	</Type>

	<Type Name="bkrl::item_def">
		<DisplayString>{id_string}</DisplayString>
	</Type>

	<Type Name="bkrl::color_def">
		<DisplayString>{id}</DisplayString>
	</Type>
</AutoVisualizer>
